* IOCSCALL

	.nolist

.equ _B_KEYINP,		0x00
.equ _B_KEYSNS,		0x01
.equ _B_SFTSNS,		0x02
.equ _BITSNS,		0x04
.equ _SKEYSET,		0x05
.equ _TVCTRL,		0x0c
.equ _LEDMOD,		0x0d
.equ _TGUSEMD,		0x0e
.equ _DEFCHR,		0x0f
.equ _CRTMOD,		0x10
.equ _CONTRAST,		0x11
.equ _HSVTORGB,		0x12
.equ _TPALET,		0x13
.equ _TPALET2,		0x14
.equ _TCOLOR,		0x15
.equ _FNTADR,		0x16
.equ _VRAMGET,		0x17
.equ _VRAMPUT,		0x18
.equ _FNTGET,		0x19
.equ _TEXTGET,		0x1a
.equ _TEXTPUT,		0x1b
.equ _CLIPPUT,		0x1c
.equ _SCROLL,		0x1d
.equ _B_CURON,		0x1e
.equ _B_CUROFF,		0x1f
.equ _B_PUTC,		0x20
.equ _B_PRINT,		0x21
.equ _B_COLOR,		0x22
.equ _B_LOCATE,		0x23
.equ _B_DOWN_S,		0x24
.equ _B_UP_S,		0x25
.equ _B_UP,			0x26
.equ _B_DOWN,		0x27
.equ _B_RIGHT,		0x28
.equ _B_LEFT,		0x29
.equ _B_CLR_ST,		0x2a
.equ _B_ERA_ST,		0x2b
.equ _B_INS,		0x2c
.equ _B_DEL,		0x2d
.equ _B_CONSOL,		0x2e
.equ _B_PUTMES,		0x2f
.equ _SET232C,		0x30
.equ _LOF232C,		0x31
.equ _INP232C,		0x32
.equ _ISNS232C,		0x33
.equ _OSNS232C,		0x34
.equ _OUT232C,		0x35
.equ _JOYGET,		0x3b
.equ _INIT_PRN,		0x3c
.equ _SNSPRN,		0x3d
.equ _OUTLPT,		0x3e
.equ _OUTPRN,		0x3f
.equ _B_SEEK,		0x40
.equ _B_VERIFY,		0x41
.equ _B_READDI,		0x42
.equ _B_DSKINI,		0x43
.equ _B_DRVSNS,		0x44
.equ _B_WRITE,		0x45
.equ _B_READ,		0x46
.equ _B_RECALI,		0x47
.equ _B_ASSIGN,		0x48
.equ _B_WRITED,		0x49
.equ _B_READID,		0x4a
.equ _B_BADFMT,		0x4b
.equ _B_READDL,		0x4c
.equ _B_FORMAT,		0x4d
.equ _B_DRVCHK,		0x4e
.equ _B_EJECT,		0x4f
.equ _DATEBCD,		0x50
.equ _DATESET,		0x51
.equ _TIMEBCD,		0x52
.equ _TIMESET,		0x53
.equ _DATEGET,		0x54
.equ _DATEBIN,		0x55
.equ _TIMEGET,		0x56
.equ _TIMEBIN,		0x57
.equ _DATECNV,		0x58
.equ _TIMECNV,		0x59
.equ _DATEASC,		0x5a
.equ _TIMEASC,		0x5b
.equ _DAYASC,		0x5c
.equ _ALARMMOD,		0x5d
.equ _ALARMSET,		0x5e
.equ _ALARMGET,		0x5f
.equ _ADPCMOUT,		0x60
.equ _ADPCMINP,		0x61
.equ _ADPCMAOT,		0x62
.equ _ADPCMAIN,		0x63
.equ _ADPCMLOT,		0x64
.equ _ADPCMLIN,		0x65
.equ _ADPCMSNS,		0x66
.equ _ADPCMMOD,		0x67
.equ _OPMSET,		0x68
.equ _OPMSNS,		0x69
.equ _OPMINTST,		0x6a
.equ _TIMERDST,		0x6b
.equ _VDISPST,		0x6c
.equ _CRTCRAS,		0x6d
.equ _HSYNCST,		0x6e
.equ _PRNINTST,		0x6f
.equ _MS_INIT,		0x70
.equ _MS_CURON,		0x71
.equ _MS_CUROF,		0x72
.equ _MS_STAT,		0x73
.equ _MS_GETDT,		0x74
.equ _MS_CURGT,		0x75
.equ _MS_CURST,		0x76
.equ _MS_LIMIT,		0x77
.equ _MS_OFFTM,		0x78
.equ _MS_ONTM,		0x79
.equ _MS_PATST,		0x7a
.equ _MS_SEL,		0x7b
.equ _MS_SEL2,		0x7c
.equ _SKEY_MOD,		0x7d
.equ _DENSNS,		0x7e
.equ _ONTIME,		0x7f
.equ _B_INTVCS,		0x80
.equ _B_SUPER,		0x81
.equ _B_BPEEK,		0x82
.equ _B_WPEEK,		0x83
.equ _B_LPEEK,		0x84
.equ _B_MEMSTR,		0x85
.equ _B_BPOKE,		0x86
.equ _B_WPOKE,		0x87
.equ _B_LPOKE,		0x88
.equ _B_MEMSET,		0x89
.equ _DMAMOVE,		0x8a
.equ _DMAMOV_A,		0x8b
.equ _DMAMOV_L,		0x8c
.equ _DMAMODE,		0x8d
.equ _BOOTINF,		0x8e
.equ _ROMVER,		0x8f
.equ _G_CLR_ON,		0x90
.equ _GPALET,		0x94
.equ _SFTJIS,		0xa0
.equ _JISSFT,		0xa1
.equ _AKCONV,		0xa2
.equ _RMACNV,		0xa3
.equ _DAKJOB,		0xa4
.equ _HANJOB,		0xa5
.equ _B_CONMOD,		0xad
.equ _OS_CURON,		0xae
.equ _OS_CUROF,		0xaf
.equ _DRAWMODE,		0xb0
.equ _APAGE,		0xb1
.equ _VPAGE,		0xb2
.equ _HOME,			0xb3
.equ _WINDOW,		0xb4
.equ _WIPE,			0xb5
.equ _PSET,			0xb6
.equ _POINT,		0xb7
.equ _LINE,			0xb8
.equ _BOX,			0xb9
.equ _FILL,			0xba
.equ _CIRCLE,		0xbb
.equ _PAINT,		0xbc
.equ _SYMBOL,		0xbd
.equ _GETGRM,		0xbe
.equ _PUTGRM,		0xbf
.equ _SP_INIT,		0xc0
.equ _SP_ON,		0xc1
.equ _SP_OFF,		0xc2
.equ _SP_CGCLR,		0xc3
.equ _SP_DEFCG,		0xc4
.equ _SP_GTPCG,		0xc5
.equ _SP_REGST,		0xc6
.equ _SP_REGGT,		0xc7
.equ _BGSCRLST,		0xc8
.equ _BGSCRLGT,		0xc9
.equ _BGCTRLST,		0xca
.equ _BGCTRLGT,		0xcb
.equ _BGTEXTCL,		0xcc
.equ _BGTEXTST,		0xcd
.equ _BGTEXTGT,		0xce
.equ _SPALET,		0xcf
.equ _TXXLINE,		0xd3
.equ _TXYLINE,		0xd4
.equ _TXLINE,		0xd5
.equ _TXBOX,		0xd6
.equ _TXFILL,		0xd7
.equ _TXREV,		0xd8
.equ _TXRASCPY,		0xdf
.equ _OPMDRV,		0xf0
.equ _RSDRV,		0xf1
.equ _A_JOY,		0xf2
.equ _ABORTRST,		0xfd
.equ _IPLERR,		0xfe
.equ _ABORTJOB,		0xff

.equ _S_RESET,		0x00
.equ _S_SELECT,		0x01
.equ _S_CMDOUT,		0x03
.equ _S_DATAIN,		0x04
.equ _S_DATAOUT,	0x05
.equ _S_STSIN,		0x06
.equ _S_MSGIN,		0x07
.equ _S_MSGOUT,		0x08
.equ _S_PHASE,		0x09
.equ _S_DATAIN_P,	0x0B
.equ _S_DATAOUT_P,	0x0C
.equ _S_INQUIRY,	0x20
.equ _S_READ,		0x21
.equ _S_WRITE,		0x22
.equ _S_FORMAT,		0x23
.equ _S_TESTUNIT,	0x24
.equ _S_READCAP,	0x25
.equ _S_READEXT,	0x26
.equ _S_WRITEEXT,	0x27
.equ _S_VERIFY,		0x28
.equ _S_MODESENSE,	0x29
.equ _S_MODESELECT,	0x2A
.equ _S_REZEROUNIT,	0x2B
.equ _S_REQUEST,	0x2C
.equ _S_SEEK,		0x2D
.equ _S_STARTSTOP,	0x2F
.equ _S_REASSIGN,	0x31
.equ _S_PAMEDIUM,	0x32

.macro SCSI func
	moveq.l	#0xf5,	%d0
	moveq.l	#\func,	%d1
	trap	#15
.endm

.macro IOCS number
	.if ((\number) >= -128) && ((\number) <= 127)
		moveq	#\number, %d0
	.else
		move.l	#\number, %d0
	.endif
	trap	#15
.endm

	.list
